# The full test suite, which will be run anytime anything is merged into master.
# See test_pull_request.yml for the tests that will be run
name: Full Test

on:
  push:
    branches:
      - main
    tags:
      - "v*" # Push events to matching v*, i.e. v1.0, v20.15.10
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  code:
    name: Code
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        task: [flake8, black, isort]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.8
        uses: actions/setup-python@v4.5.0
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install tox
      - name: Run task
        run: tox -e ${{ matrix.task }}

  manifest:
    name: Check Manifest
    needs: code
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.8
        uses: actions/setup-python@v4.5.0
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install check-manifest
      - name: Check Manifest
        run: check-manifest

  test:
    needs: code
    name: ${{ matrix.platform }} py${{ matrix.python }} ${{ matrix.toxenv }} ${{ matrix.MIN_REQ && 'min_req' }}
    runs-on: ${{ matrix.platform }}
    strategy:
      fail-fast: false
      matrix:
        platform: [ubuntu-latest, windows-latest, macos-latest]
        python: [3.7, 3.8, 3.9]

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v4.5.0
        with:
          python-version: ${{ matrix.python }}

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install setuptools tox tox-gh-actions

      # here we pass off control of environment creation and running of tests to tox
      # tox-gh-actions, installed above, helps to convert environment variables into
      # tox "factors" ... limiting the scope of what gets tested on each platform
      # The one exception is if the "toxenv" environment variable has been set,
      # in which case we are declaring one specific tox environment to run.
      # see tox.ini for more
      - name: Test with tox
        uses: GabrielBB/xvfb-action@v1
        with:
          run: python -m tox
        env:
          PLATFORM: ${{ matrix.platform }}
          TOXENV: ${{ matrix.toxenv }}

      - name: Coverage
        if: runner.os == 'Linux' && matrix.python == '3.9'
        uses: codecov/codecov-action@v3

  test_pip_install:
    name: ubuntu-latest 3.8 pip install
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          path: imzy-from-github

      - name: Set up Python 3.9
        uses: actions/setup-python@v4.5.0
        with:
          python-version: 3.9
          cache: "pip"
          cache-dependency-path: imzy-from-github/setup.cfg


      - name: Install this commit
        run: |
          pip install --upgrade pip
          pip install ./imzy-from-github[all,testing]

      - name: Check installation
        run: |
          python -c "import imzy; print(imzy.__version__)"

  #     - name: Test
  #       uses: GabrielBB/xvfb-action@v1
  #       with:
  #         run: pytest --pyargs imzy --color=yes

  deploy:
    name: Deploy to Test PyPI and PyPI
    # this will run when you have tagged a commit, starting with "v*"
    # and requires that you have put your twine API key in your
    # github secrets (see readme for details)
    needs: [test, test_pip_install]
    runs-on: ubuntu-latest
    if: contains(github.ref, 'tags')
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4.5.0
        with:
          python-version: "3.x"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -U setuptools setuptools_scm wheel twine
      - name: Build package
        run: |
          python setup.py sdist bdist_wheel
      - name: Publish to Test PyPI
        uses: pypa/gh-action-pypi-publish@master
        if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags')
        with:
          user: __token__
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}
          repository_url: https://test.pypi.org/legacy/
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@master
        if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags')
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
